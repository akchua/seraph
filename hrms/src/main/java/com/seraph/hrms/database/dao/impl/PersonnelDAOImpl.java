package com.seraph.hrms.database.dao.impl;import org.apache.commons.lang3.StringUtils;import org.hibernate.criterion.Junction;import org.hibernate.criterion.MatchMode;import org.hibernate.criterion.Order;import org.hibernate.criterion.Restrictions;import org.springframework.stereotype.Repository;import com.seraph.hrms.database.dao.PersonnelDAO;import com.seraph.hrms.database.entity.Personnel;import com.seraph.hrms.objects.ObjectList;/** * @author  Adrian Jasper K. Chua * @version 1.0 * @since   6 December 2017 */@Repositorypublic class PersonnelDAOImpl		extends AbstractDAO<Personnel, Long> 		implements PersonnelDAO {	@Override	public ObjectList<Personnel> findAllWithPaging(int pageNumber, int resultsPerPage, String searchKey) {		return findAllWithPagingAndOrder(pageNumber, resultsPerPage, searchKey, null);	}	@Override	public ObjectList<Personnel> findAllWithPagingAndOrder(int pageNumber, int resultsPerPage, String searchKey,			Order[] orders) {		final Junction conjunction = Restrictions.conjunction();		conjunction.add(Restrictions.eq("isValid", Boolean.TRUE));				if(StringUtils.isNotBlank(searchKey))		{			for(String s : searchKey.split("\\s+")) {				conjunction.add(Restrictions.disjunction()						.add(Restrictions.ilike("firstName", s, MatchMode.ANYWHERE))						.add(Restrictions.ilike("lastName", s, MatchMode.ANYWHERE))						.add(Restrictions.ilike("middleName", s, MatchMode.ANYWHERE)));			}		}				return findAllByCriterion(pageNumber, resultsPerPage, null, null, null, orders, conjunction);	}}
